// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Models;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240416223431_M00")]
    partial class M00
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("api.Models.Denuncia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoViolencia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Denúncias");
                });

            modelBuilder.Entity("api.Models.DenunciaUsuarios", b =>
                {
                    b.Property<int>("DenunciaId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("DenunciaId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("DenunciaUsuarios");
                });

            modelBuilder.Entity("api.Models.Depoimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Depoimentos");
                });

            modelBuilder.Entity("api.Models.DepoimentoUsuarios", b =>
                {
                    b.Property<int>("DepoimentoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("DepoimentoId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("DepoimentoUsuarios");
                });

            modelBuilder.Entity("api.Models.LinkDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DenunciaId")
                        .HasColumnType("int");

                    b.Property<int?>("DepoimentoId")
                        .HasColumnType("int");

                    b.Property<string>("Href")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Metodo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DenunciaId");

                    b.HasIndex("DepoimentoId");

                    b.ToTable("LinkDto");
                });

            modelBuilder.Entity("api.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuários");
                });

            modelBuilder.Entity("api.Models.DenunciaUsuarios", b =>
                {
                    b.HasOne("api.Models.Denuncia", "Denuncia")
                        .WithMany("Usuarios")
                        .HasForeignKey("DenunciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Usuario", "Usuario")
                        .WithMany("Denuncias")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Denuncia");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("api.Models.DepoimentoUsuarios", b =>
                {
                    b.HasOne("api.Models.Depoimento", "Depoimento")
                        .WithMany("Usuarios")
                        .HasForeignKey("DepoimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Usuario", "Usuario")
                        .WithMany("Depoimentos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Depoimento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("api.Models.LinkDto", b =>
                {
                    b.HasOne("api.Models.Denuncia", null)
                        .WithMany("Links")
                        .HasForeignKey("DenunciaId");

                    b.HasOne("api.Models.Depoimento", null)
                        .WithMany("Links")
                        .HasForeignKey("DepoimentoId");
                });

            modelBuilder.Entity("api.Models.Denuncia", b =>
                {
                    b.Navigation("Links");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("api.Models.Depoimento", b =>
                {
                    b.Navigation("Links");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("api.Models.Usuario", b =>
                {
                    b.Navigation("Denuncias");

                    b.Navigation("Depoimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
